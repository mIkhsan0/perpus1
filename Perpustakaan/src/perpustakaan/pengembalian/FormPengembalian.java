/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpustakaan.pengembalian;

import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import perpustakaan.pinjam.BukuDipinjam;
import perpustakaan.DialogUI;
import perpustakaan.Perpustakaan;

/**
 *
 * @author HP
 */
public class FormPengembalian extends javax.swing.JFrame {

    private ArrayList<BukuDipinjam> bukuDipinjamCollection = new ArrayList<>();
    
    /**
     * Creates new form FormPengembalian
     */
    public FormPengembalian() {
        initComponents();
    }

        public void tampilkan() {
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);

        ArrayList<BukuDipinjam> bukuDipinjamDariPeminjaman = Perpustakaan.peminjamanManager.getDaftarBukuDipinjam();
        display(bukuDipinjamDariPeminjaman);
    }

    public void display(ArrayList<BukuDipinjam> bukuList) {
        Object[] kolom = {"Buku Dipinjam"};
        DefaultTableModel model = new DefaultTableModel(kolom, 0);

        if (bukuList.isEmpty()) {
            model.addRow(new Object[]{"Tidak ada riwayat peminjaman"});
        } else {
            for (BukuDipinjam buku : bukuList) {
                model.addRow(new Object[]{buku.getJudul()});
            }
        }
        daftarPinjaman.setModel(model);
    }

    public void tambahBukuKeDaftarDikembalikan(BukuDipinjam buku) {
        if (bukuDipinjamCollection.contains(buku)) {
            DialogUI dialog = new DialogUI("Buku ini sudah dalam daftar pengembalian!");
            dialog.setVisible(true);
            return;
        }
        bukuDipinjamCollection.add(buku);
        tampilkanDikembalikan();
    }

    public void tampilkanDikembalikan() {
        Object[] kolom = {"Buku Dikembalikan"};
        DefaultTableModel model = new DefaultTableModel(kolom, 0);

        for (BukuDipinjam buku : bukuDipinjamCollection) {
            model.addRow(new Object[]{buku.getJudul()});
        }
        daftarPengembalian.setModel(model);
    }

    public void hapusBukuDariDaftarDikembalikan(BukuDipinjam buku) {
        bukuDipinjamCollection.remove(buku);
        tampilkanDikembalikan();
    }

    public void pesanSukses() {
        DialogUI dialog = new DialogUI("Pengembalian berhasil!");
        dialog.setVisible(true);
    }

    public void bayarDenda() {
        int totalDenda = 0;
        for (BukuDipinjam buku : bukuDipinjamCollection) {
            int keterlambatan = buku.getLama() - 3;
            if (keterlambatan > 0) {
                totalDenda += keterlambatan * 2000;
            }
        }
        if (totalDenda > 0) {
            DialogUI dialog = new DialogUI("Total denda: Rp " + totalDenda);
            dialog.setVisible(true);
        } else {
            pesanSukses();
        }
    }

    public boolean statusPengembalian() {
        return !bukuDipinjamCollection.isEmpty();
    }

    public ArrayList<BukuDipinjam> getBukuDipinjamCollection() {
        return bukuDipinjamCollection;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        daftarPengembalian = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        daftarPinjaman = new javax.swing.JTable();
        tombolKembalikan = new javax.swing.JButton();
        tombolBatal = new javax.swing.JButton();
        tombolKonfirmasi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        daftarPengembalian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(daftarPengembalian);

        daftarPinjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        daftarPinjaman.setEnabled(false);
        jScrollPane1.setViewportView(daftarPinjaman);

        tombolKembalikan.setText("Kembalikan");
        tombolKembalikan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tombolKembalikanMouseClicked(evt);
            }
        });
        tombolKembalikan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolKembalikanActionPerformed(evt);
            }
        });

        tombolBatal.setText("Batal");
        tombolBatal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tombolBatalMouseClicked(evt);
            }
        });

        tombolKonfirmasi.setText("Konfirmasi");
        tombolKonfirmasi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tombolKonfirmasiMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tombolKembalikan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tombolBatal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(tombolKonfirmasi)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(tombolKembalikan)
                        .addGap(27, 27, 27)
                        .addComponent(tombolBatal)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tombolKonfirmasi)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void judulBukuActionPerformed(java.awt.event.ActionEvent evt) {
                                                  
    }                 
    
    private void tombolKembalikanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolKembalikanMouseClicked
        // TODO add your handling code here:
        int barisDipilih = daftarPengembalian.getSelectedRow();
        if (barisDipilih != -1) {
            String judul = daftarPengembalian.getValueAt(barisDipilih, 0).toString();
            for(Buku buku : bukuList) {
                if(buku.judul.equalsIgnoreCase(judul)) {
                    tambahBuku(buku, Integer.parseInt(lama.getText()));
                    return;
                }
            }
        }
    }//GEN-LAST:event_tombolKembalikanMouseClicked

    private void tombolKembalikanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolKembalikanActionPerformed
        // TODO add your handling code here:
            int barisDipilih = daftarPinjaman.getSelectedRow();
        if (barisDipilih != -1) {
            String judul = daftarPinjaman.getValueAt(barisDipilih, 0).toString();
            for (BukuDipinjam buku : bukuDipinjamCollection) {
                if (buku.getJudul().equalsIgnoreCase(judul)) {
                    tambahBukuKeDaftarDikembalikan(buku);
                    return;
                }
            }
        } else {
            DialogUI dialog = new DialogUI("Pilih buku yang ingin dikembalikan!");
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_tombolKembalikanActionPerformed

    private void tombolBatalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolBatalMouseClicked
        // TODO add your handling code here:
        int barisDipilih = daftarPengembalian.getSelectedRow();
        if (barisDipilih != -1) {
            String judul = daftarPengembalian.getValueAt(barisDipilih, 0).toString();
            for (BukuDipinjam buku : bukuDipinjamCollection) {
                if (buku.getJudul().equalsIgnoreCase(judul)) {
                    hapusBukuDariDaftarDikembalikan(buku);
                    return;
                }
            }
        } else {
            DialogUI dialog = new DialogUI("Pilih buku yang ingin dibatalkan dari daftar pengembalian!");
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_tombolBatalMouseClicked

    private void tombolKonfirmasiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolKonfirmasiMouseClicked
        // TODO add your handling code here:
        int barisDipilih = daftarPinjaman.getSelectedRow();
        if (barisDipilih != -1) {
            String judul = daftarPinjaman.getValueAt(barisDipilih, 0).toString();
            for (BukuDipinjam buku : bukuDipinjamCollection) {
                if (buku.getJudul().equalsIgnoreCase(judul)) {
                    tambahBukuKeDaftarDikembalikan(buku);
                    return;
                }
            }
        } else {
            DialogUI dialog = new DialogUI("Pilih buku yang ingin dikembalikan!");
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_tombolKonfirmasiMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */

         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormPengembalian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable daftarPengembalian;
    private javax.swing.JTable daftarPinjaman;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton tombolBatal;
    private javax.swing.JButton tombolKembalikan;
    private javax.swing.JButton tombolKonfirmasi;
    // End of variables declaration//GEN-END:variables
}
