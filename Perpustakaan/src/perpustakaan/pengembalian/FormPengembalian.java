/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpustakaan.pengembalian;

import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import perpustakaan.pinjam.BukuDipinjam;
import perpustakaan.DialogUI;
import perpustakaan.Perpustakaan;

/**
 *
 * @author HP
 */
public class FormPengembalian extends javax.swing.JFrame {

    private ArrayList<BukuDipinjam> bukuDipinjamCollection = new ArrayList<>();
    private ArrayList<BukuDipinjam> bukuDikembalikanCollection = new ArrayList<>();
    
    /**
     * Creates new form FormPengembalian
     */
    public FormPengembalian() {
        initComponents();
    }

        public void tampilkan() {
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    public void display(ArrayList<BukuDipinjam> bukuList) {
        this.bukuDipinjamCollection = bukuList;
        Object[] kolom = {"Buku Dipinjam"};
        DefaultTableModel model = new DefaultTableModel(kolom, 0);

        if (bukuList.isEmpty()) {
            model.addRow(new Object[]{"Tidak ada riwayat peminjaman"});
        } else {
            for (BukuDipinjam buku : bukuList) {
                model.addRow(new Object[]{buku.getJudul()});
            }
        }
        daftarPinjaman.setModel(model);
    }

    public void tambahBukuKeDaftarDikembalikan(BukuDipinjam buku) {
        for(BukuDipinjam bukuDikembalikan : bukuDikembalikanCollection) {
                if(bukuDikembalikan.judul.equals(buku.judul)) {
                    return;
                }
            }
        bukuDikembalikanCollection.add(buku);
        tampilkanDikembalikan(bukuDikembalikanCollection);
    }

    public void tampilkanDikembalikan(ArrayList<BukuDipinjam> bukuList) {
        Object[] kolom = {"Buku Dikembalikan"};
        DefaultTableModel model = new DefaultTableModel(kolom, 0);

        for (BukuDipinjam buku : bukuList) {
            Object[] baris = { buku.judul };
            model.addRow(baris);
        }
        daftarPengembalian.setModel(model);
    }

    public void hapusBukuDariDaftarDikembalikan(BukuDipinjam buku) {
        bukuDikembalikanCollection.remove(buku);
        tampilkanDikembalikan(bukuDikembalikanCollection);
    }

    public void pesanSukses(Boolean sukses, BukuDipinjam buku) {
        if (!sukses) {
            DialogUI dialog = new DialogUI("Silahkan bayar denda");
            dialog.pack();
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);
            new Thread(() -> {
                while (dialog.isVisible()) {
                    try {
                        Thread.sleep(100); // Sleep for 100ms, then check again
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }

                // Run this on the UI thread after FirstFrame is closed
                SwingUtilities.invokeLater(() -> {
                    bayarDenda(buku);
                });
            }).start();
        } else {
            statusPengembalian(buku);
        }
    }

    public void bayarDenda(BukuDipinjam buku) {
        int totalDenda = 2000;
        DialogUI dialog = new DialogUI("Total denda: Rp " + totalDenda);
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
        new Thread(() -> {
            while (dialog.isVisible()) {
                try {
                    Thread.sleep(100); // Sleep for 100ms, then check again
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }

            // Run this on the UI thread after FirstFrame is closed
            SwingUtilities.invokeLater(() -> {
                statusPengembalian(buku);
            });
        }).start();
    }

    public boolean statusPengembalian(BukuDipinjam buku) {
        DialogUI dialog = new DialogUI(" Pengembalian buku: " + buku.getJudul() + " telah dikonfirmasi");
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
        bukuDipinjamCollection.remove(buku);
        return true;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        daftarPengembalian = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        daftarPinjaman = new javax.swing.JTable();
        tombolKembalikan = new javax.swing.JButton();
        tombolBatal = new javax.swing.JButton();
        tombolKonfirmasi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        daftarPengembalian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        daftarPengembalian.setEnabled(false);
        jScrollPane2.setViewportView(daftarPengembalian);

        daftarPinjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(daftarPinjaman);

        tombolKembalikan.setText("Kembalikan");
        tombolKembalikan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tombolKembalikanMouseClicked(evt);
            }
        });
        tombolKembalikan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolKembalikanActionPerformed(evt);
            }
        });

        tombolBatal.setText("Batal");
        tombolBatal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tombolBatalMouseClicked(evt);
            }
        });

        tombolKonfirmasi.setText("Konfirmasi");
        tombolKonfirmasi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tombolKonfirmasiMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tombolKembalikan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tombolBatal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(tombolKonfirmasi)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(tombolKembalikan)
                        .addGap(27, 27, 27)
                        .addComponent(tombolBatal)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tombolKonfirmasi)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tombolKembalikanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolKembalikanMouseClicked
        // TODO add your handling code here:
        int barisDipilih = daftarPinjaman.getSelectedRow();
        if (barisDipilih != -1) {
            String judul = daftarPinjaman.getValueAt(barisDipilih, 0).toString();
            for (BukuDipinjam bukuDipinjam : bukuDipinjamCollection) {
                if (bukuDipinjam.getJudul().equalsIgnoreCase(judul)) {
                    tambahBukuKeDaftarDikembalikan(bukuDipinjam);
                    return;
                }
            }
        } else {
            DialogUI dialog = new DialogUI("Pilih buku yang ingin dikembalikan!");
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_tombolKembalikanMouseClicked

    private void tombolKembalikanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolKembalikanActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_tombolKembalikanActionPerformed

    private void tombolBatalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolBatalMouseClicked
        // TODO add your handling code here:
        int barisDipilih = daftarPinjaman.getSelectedRow();
        if (barisDipilih != -1) {
            String judul = daftarPinjaman.getValueAt(barisDipilih, 0).toString();
            for (BukuDipinjam bukuDikembalikan : bukuDikembalikanCollection) {
                if (bukuDikembalikan.getJudul().equalsIgnoreCase(judul)) {
                    hapusBukuDariDaftarDikembalikan(bukuDikembalikan);
                    return;
                }
            }
        } else {
            DialogUI dialog = new DialogUI("Pilih buku yang ingin dibatalkan dari daftar pengembalian!");
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_tombolBatalMouseClicked

    private void tombolKonfirmasiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tombolKonfirmasiMouseClicked
        // TODO add your handling code here:
        Perpustakaan.pengembalianController.konfirmasiPengembalian(bukuDikembalikanCollection);
    }//GEN-LAST:event_tombolKonfirmasiMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable daftarPengembalian;
    private javax.swing.JTable daftarPinjaman;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton tombolBatal;
    private javax.swing.JButton tombolKembalikan;
    private javax.swing.JButton tombolKonfirmasi;
    // End of variables declaration//GEN-END:variables
}
